name: Python application

on: [push, pull_request]

jobs:
  linux_wheels_:
    if: ${{ false }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [ '3.7', '3.8', '3.9', '3.10' ]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Install dependencies
      env:
        ZIP_PASS: ${{ secrets.ZIP_PASS }}
        FLYCAP_VERSION: "2.13.3.31"
      run: |
        sudo apt update
        sudo apt -y install libraw1394-11
        sudo apt -y install libgtkmm-2.4-1v5 libglademm-2.4-1v5 libgtkglextmm-x11-1.2-0v5 libgtkmm-2.4-dev
        sudo apt -y install libglademm-2.4-dev libgtkglextmm-x11-1.2-dev libusb-1.0-0 curl p7zip-full patchelf

        name="flycapture2-$FLYCAP_VERSION-amd64-pkg_Ubuntu18.04"
        curl -sLO "https://github.com/matham/rotpy/releases/download/v0.1.0/$name.7z"
        7z x "$name.7z" "-p$ZIP_PASS"
        tar xzf "$name.tgz"

        cd flycapture2-$FLYCAP_VERSION-amd64
        sudo dpkg -i libflycapture-2*
        sudo dpkg -i libflycapturegui-2*
        sudo dpkg -i libflycapture-c-2*
        sudo dpkg -i libflycapturegui-c-2*
        sudo dpkg -i updatorgui*

    - name: Make wheel
      run: |
        python3 -m pip install --upgrade sphinx sphinx-rtd-theme build
        python3 -m build --wheel .

    - name: Upload wheel
      uses: actions/upload-artifact@v2
      with:
        name: py_wheel
        path: dist

    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v0.1.14
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: dist/*

    - name: Generate docs
      if: github.ref == 'refs/heads/master' && matrix.python == '3.10'
      run: |
        python3 -m pip install cython setuptools
        python3 -m pip install -e .
        cd doc
        make html
    - name: gh-pages upload
      if: github.ref == 'refs/heads/master' && matrix.python == '3.10'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cp -r doc/build/html ~/docs_temp

        git config --global user.email "matt@einhorn.dev"
        git config --global user.name "Matthew Einhorn"
        git remote rm origin || true
        git remote add origin "https://x-access-token:${GITHUB_TOKEN}@github.com/matham/rotpy.git"

        git checkout --orphan gh-pages
        cp -r .git ~/docs_git
        cd ..
        rm -rf pyflycap2
        mkdir pyflycap2
        cd pyflycap2
        cp -r ~/docs_git .git
        cp -r ~/docs_temp/* .
        touch .nojekyll

        git add .
        git commit -a -m "Docs for git-$GITHUB_SHA"
        git push origin gh-pages -f

  linux_wheels:
    env:
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_24
      CIBW_BUILD_VERBOSITY: 3
      CIBW_PLATFORM: linux
      CIBW_BUILD: 'cp37-manylinux_x86_64 cp38-manylinux_x86_64 cp39-manylinux_x86_64 cp310-manylinux_x86_64'
      CIBW_ARCHS: x86_64
      CIBW_BEFORE_ALL_LINUX: >
        apt update &&
        apt install xz-utils debconf-utils libusb-1.0-0 libusb-1.0-0-dev -y &&
        curl -OsL https://github.com/matham/rotpy/releases/download/v0.1.0.dev0/spinnaker.tar.xz &&
        tar -xf spinnaker.tar.xz &&
        echo "libspinnaker libspinnaker/accepted-flir-eula select true" | /usr/bin/debconf-set-selections &&
        dpkg -i spinnaker/libspinnaker_2.6.0.160_amd64.deb &&
        dpkg -i spinnaker/libspinnaker-dev_2.6.0.160_amd64.deb &&
        dpkg -i spinnaker/libgentl_2.6.0.160_amd64.deb
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel
      - name: Make wheels
        run: |
          python -m cibuildwheel --output-dir dist
      - name: Upload wheel
        uses: actions/upload-artifact@v2
        with:
          name: py_wheel
          path: dist
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v0.1.14
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: dist/*
      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/')
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.pypi_password }}
        run: |
          python -m pip install twine
          twine upload dist/*

  windows_wheels:
    runs-on: windows-latest
    strategy:
      matrix:
        python: [ '3.7', '3.8', '3.9', '3.10' ]
        arch: ['x64', 'x86']

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
        architecture: ${{ matrix.arch }}

    - name: Make sdist
      if: matrix.arch == 'x64' && matrix.python == '3.10'
      run: |
        python -m pip install build
        python -m build --sdist

    - uses: actions/cache@v2
      id: get-deps
      with:
        path: spinnaker/
        key: spinnaker-win-${{ matrix.arch }}-0

    - name: Get dependencies
      env:
        ZIP_PASS: ${{ secrets.ZIP_PASS }}
      if: steps.get-deps.outputs.cache-hit != 'true'
      run: |
        Invoke-WebRequest "https://github.com/matham/rotpy/releases/download/v0.1.0.dev0/spinnaker.7z" -OutFile "spinnaker.7z"
        7z x "spinnaker.7z"

    - name: Make wheel
      run: |
        $env:ROTPY_INCLUDE = "${pwd}/spinnaker/include"
        $env:ROTPY_LIB = "${pwd}/spinnaker/bin_${{ matrix.arch }};${pwd}/spinnaker/lib_${{ matrix.arch }}"
        $env:ROTPY_WHEEL_DEPS = "${pwd}/spinnaker/bin_${{ matrix.arch }}"

        python -m pip install build
        python -m build --wheel

    - name: Upload wheel
      uses: actions/upload-artifact@v2
      with:
        name: py_wheel
        path: dist

    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v0.1.14
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: dist/*

    - name: Publish to PyPI
      if: startsWith(github.ref, 'refs/tags/')
      env:
        TWINE_USERNAME: "__token__"
        TWINE_PASSWORD: ${{ secrets.pypi_password }}
      run: |
        python -m pip install twine
        twine upload dist/*
